<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
	http://www.springframework.org/schema/tx  
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
	<!-- spring的配置文件 -->
	
	<!-- 1.数据源：DriverManagerDateSource -->
		<bean id="ds1" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://192.168.0.133:3306/cmcallcenter_db?allowMultiQueries=true"/>
		<property name="username" value="root"/>
		<property name="password" value="techsum"/>		
		</bean>
		<bean id="ds2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/meitu"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>		
		</bean>
		<bean id="ds3" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/jfcallcenter"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>		
		</bean>
		<bean id="ds4" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/"/>
		<property name="username" value="root"/>
		<property name="password" value="root"/>		
		</bean>
		<bean id="ds" class="com.dianfeng.mybatis.DynamicDataSource">  
          <property name="targetDataSources">  
             <map key-type="java.lang.String">  
                 <entry value-ref="ds1" key="ds1"></entry>  
                 <entry value-ref="ds2" key="ds2"></entry>  
                 <entry value-ref="ds3" key="ds3"></entry>
                 <entry value-ref="ds4" key="ds4"></entry>
             </map>  
          </property>  
    <property name="defaultTargetDataSource" ref="ds1"></property>      <!-- 默认使用ds1的数据源 -->
</bean>  
	<!-- 2.mybatis的SqlSession的工厂：SqlSessionFactoryBean 
		dataSource:引用数据源
		typeAliasesPackage：指定实体类的包名，自动将实体的简单类名映射陈别名
		-->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="ds"/>
			<property name="configLocation" value="classpath:mybatis-config.xml" />
			<property name="typeAliasesPackage" value="com.dianfeng.entity"></property>
		</bean>
	<!-- 3.mybatis自动扫描加载Sql映射文件：MapperScannerConfigurer 
		basePackage:指定Sql映射文件/接口所在的包（自动扫描）
		sqlSessionFactory:引用上面定义的sqlSessionFactory
	-->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.dianfeng.dao"/>
			<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
		</bean>
	<!-- 4.事务管理：DataSourceTransactionManager 
		dataSource:引用上面的数据源
	-->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="ds"></property>
		</bean>
	<!-- 5.使用声明式事务 
		transaction-manager：引用上面定义的事务管理
	-->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
             <tx:attributes>
                 <tx:method name="get*" read-only="true" />
                 <tx:method name="find*" read-only="true" />
                 <tx:method name="query*" read-only="true" />
                 <tx:method name="select*" read-only="true" />
                 <tx:method name="all*" read-only="true" />
                 <tx:method name="do*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
                 <tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
                 <tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
                 <tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
             </tx:attributes>
       </tx:advice>
       <aop:config proxy-target-class="true">
             <aop:advisor pointcut="execution(* com.dianfeng..*service.*(..))" advice-ref="txAdvice" />
       </aop:config>
       
        <bean id="ManagerService" class="com.dianfeng.service.impl.ManagerServiceImpl"
			autowire="byType" />
		<bean id="GeneralFactory" class="com.dianfeng.socket.GeneralFactory" autowire="byType"></bean>
	
       <!--  
       <bean id="ManagerService" class="com.dianfeng.service.impl.ManagerServiceImpl"
			autowire="byType" />
	   <bean id="AngentJobService" class="com.dianfeng.service.impl.AgentJobServiceImpl"
			autowire="byType" />
	  <bean id="GeneralFactory" class="com.dianfeng.socket.GeneralFactory" autowire="byType"></bean>
	  -->
	</beans>